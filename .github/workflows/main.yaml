name: MediTrack System | Build, Test, and Deploy to DigitalOcean Kubernetes
run-name: Build, Test, and Deploy ${{ github.event.inputs.folder }}_app

on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'The folder to build (e.g., appointment_service, patient_consumer_service)'
        required: false
        default: ''

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Verify Folder Name
      - name: Verify Folder Name
        run: |
          echo 'Folder name: "${{ github.event.inputs.folder }}"'

      # Step 2: Check for Folder Input
      - name: Check for Folder Input
        id: check-folder
        run: |
          if [ -z "${{ github.event.inputs.folder }}" ]; then
            echo "No folder provided. Skipping build."
            echo "skip_build=true" >> $GITHUB_ENV
          else
            echo "skip_build=false" >> $GITHUB_ENV
          fi

      # Step 3: Skip Job if No Folder Provided
      - name: Skip Job if No Folder Provided
        if: env.skip_build == 'true'
        run: echo "Skipping build as no folder was provided."

      # Step 4: Checkout Code
      - name: Checkout Code
        if: env.skip_build == 'false'
        uses: actions/checkout@v3

      # Step 5: Install Python and Dependencies
      - name: Set Up Python
        if: env.skip_build == 'false'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        if: env.skip_build == 'false'
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ github.event.inputs.folder }}/requirements.txt
          pip install pytest pytest-django

      # Step 6: Run Tests
      - name: Run Django Tests
        if: env.skip_build == 'false' && (${{ github.event.inputs.folder }} == 'appointment_service' || ${{ github.event.inputs.folder }} == 'patient_service')
        run: |
          cd ${{ github.event.inputs.folder }}
          python manage.py test

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        if: env.skip_build == 'false'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 8: Build and Push Docker Image
      - name: Build and Push Docker Image
        if: env.skip_build == 'false'
        run: |
          docker build -t kaushiks93/${{ github.event.inputs.folder }}_app:latest ${{ github.event.inputs.folder }}
          docker push kaushiks93/${{ github.event.inputs.folder }}_app:latest

      # Step 9: Log in to DigitalOcean
      - name: Set up DigitalOcean CLI
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/latest/download/doctl-linux-amd64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl auth init -t ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Set up kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig

      # Step 10: Deploy to DigitalOcean
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f ${{ github.event.inputs.folder }}/doctl/deployment.yaml
