name: Appointment Service Build and Deploy to GKE

on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      folder:
        description: 'The folder to build (e.g., appointment_service)'
        required: false"
        default: ''

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check for Folder Input
        id: check-folder
        run: |
          if [ -z "${{ github.event.inputs.folder }}" ]; then
            echo "No folder provided. Skipping build."
            echo "skip_build=true" >> $GITHUB_ENV
          else
            echo "skip_build=false" >> $GITHUB_ENV

      - name: Skip Job if No Folder Provided
        if: env.skip_build == 'true'
        run: echo "Skipping build as no folder was provided."
      - name: Checkout code
        if: env.skip_build == 'false'
        uses: actions/checkout@v3

      - name: Verify Folder Exists
        if: env.skip_build == 'false'
        run: |
          if [ ! -d "${{ github.event.inputs.folder }}" ]; then
            echo "Error: Folder '${{ github.event.inputs.folder }}' does not exist."
            exit 1
          fi

      - name: Log in to Docker Hub
        if: env.skip_build == 'false'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        if: env.skip_build == 'false'
        run: |
          docker build -t kaushiks93/${{ github.event.inputs.folder }}-app:latest ${{ github.event.inputs.folder }}
          docker push kaushiks93/${{ github.event.inputs.folder }}-app:latest

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Build and Push Docker Image
      #   run: |
      #     docker build -t kaushiks93/appointment-service-app:latest .
      #     docker push kaushiks93/appointment-service-app:latest

      # - name: Set up gcloud CLI
      #   uses: google-github-actions/setup-gcloud@v1
      #   with:
      #     service_account_key: ${{ secrets.GCLOUD_KEY }}
      #     project_id: <your-project-id>

      # - name: Authenticate with GKE
      #   run: |
      #     gcloud container clusters get-credentials django-cluster --region=us-central1

      # - name: Deploy to GKE
      #   run: |
      #     kubectl apply -f k8s-deployment.yaml
